{"version":3,"sources":["utilities/RimbleWeb3.js","components/Header.js","utilities/content/TransactionToastMessages.js","utilities/TransactionToastUtil.js","components/ConnectButton.js","components/SmartContractControls.js","components/TransactionsCard.js","components/PrimaryCard.js","components/InstructionsCard.js","components/MissingWeb3Provider.js","theme.js","App.js","serviceWorker.js","index.js"],"names":["RimbleTransactionContext","React","createContext","contract","account","web3","transactions","initWeb3","initContract","initAccount","RimbleTransaction","a","window","ethereum","console","log","Web3","currentProvider","setState","address","abi","state","eth","Contract","toastProvider","addMessage","variant","enable","then","wallets","contractMethodSendWrapper","contractMethod","transaction","createTransaction","addTransaction","method","type","status","updateTransaction","methods","send","from","on","hash","transactionHash","recentEvent","confirmationNumber","receipt","confirmationCount","error","secondaryMessage","actionHref","actionText","created","Date","now","lastUpdated","updatedTransaction","this","Provider","value","props","Component","Consumer","Header","bg","p","justifyContent","flexDirection","href","target","width","mx","h2","color","TransactionToastMessages","started","message","icon","pending","confirmed","success","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","Object","keys","length","getNewObjectFromCollection","objectKey","filter","key","includes","map","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","tx","currentTx","prevTx","processTransactionUpdates","prevProps","showTransactionToast","toastMeta","getTransactionToastMeta","transactionToastMeta","prevState","ref","node","ConnectButton","alignItems","px","py","h3","textAlign","pb","size","onClick","disabled","contractAbi","constant","inputs","name","outputs","payable","stateMutability","SmartContractControls","needsUpdate","getNumber","getCounter","call","Number","toString","catch","resetCounter","incrementCounter","decrementCounter","borderBottom","borderColor","mb","fontSize","pt","borderTop","mr","TransactionsCard","fontWeight","keyName","keyIndex","txHash","txStart","substr","txEnd","PrimaryCard","RimbleWeb3","InstructionsCard","mt","MissingWeb3Provider","fontSizes","fontWeights","lineHeights","solid","title","copy","fonts","serif","sansSerif","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","shadows","opacity","colors","primary","blue","navy","copyColor","black","grey","silver","white","transparent","blacks","whites","GlobalStyle","createGlobalStyle","App","theme","className","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c154ae9.chunk.js","sourcesContent":["import React from \"react\";\nimport Web3 from \"web3\"; // uses latest 1.x.x version\n\nconst RimbleTransactionContext = React.createContext({\n  contract: {},\n  account: {},\n  web3: {},\n  transactions: {},\n  initWeb3: () => {},\n  initContract: () => {},\n  initAccount: () => {}\n});\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  // Initialize a web3 provider\n  initWeb3 = async () => {\n    let web3 = {};\n\n    // Check for modern web3 provider\n    if (window.ethereum) {\n      console.log(\"Using modern web3 provider.\");\n      web3 = new Web3(window.ethereum);\n    }\n    // Legacy dapp browsers, public wallet address always exposed\n    else if (window.web3) {\n      console.log(\"Legacy web3 provider. Try updating.\");\n      web3 = new Web3(window.web3.currentProvider);\n    }\n    // Non-dapp browsers...\n    else {\n      console.log(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n\n      web3 = false;\n    }\n\n    this.setState({ web3 });\n  };\n\n  initContract = async (address, abi) => {\n    console.log(\"creating contract\");\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = await new this.state.web3.eth.Contract(abi, address);\n      this.setState({ contract });\n    } catch (error) {\n      console.log(\"Could not create contract.\");\n      window.toastProvider.addMessage(\"Contract creation failed.\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  initAccount = async () => {\n    try {\n      // Request account access if needed\n      await window.ethereum.enable().then(wallets => {\n        const account = wallets[0];\n        this.setState({ account });\n        console.log(\"wallet address:\", this.state.account);\n      });\n    } catch (error) {\n      // User denied account access...\n      console.log(\"error:\", error);\n      window.toastProvider.addMessage(\"User needs to CONNECT wallet\", {\n        variant: \"failure\"\n      });\n    }\n  };\n\n  contractMethodSendWrapper = contractMethod => {\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction();\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.method = contractMethod;\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { contract, account } = this.state;\n\n    try {\n      contract.methods[contractMethod]()\n        .send({ from: account })\n        .on(\"transactionHash\", hash => {\n          // Submitted to block and received transaction hash\n          // Set properties on the current transaction\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"confirmation\", (confirmationNumber, receipt) => {\n          // Update confirmation count on each subsequent confirmation that's received\n          transaction.confirmationCount += 1;\n\n          // How many confirmations should be received before informing the user\n          const confidenceThreshold = 3;\n\n          if (transaction.confirmationCount === 1) {\n            // Initial confirmation receipt\n            transaction.status = \"confirmed\";\n          } else if (transaction.confirmationCount < confidenceThreshold) {\n            // Not enough confirmations to match threshold\n          } else if (transaction.confirmationCount === confidenceThreshold) {\n            // Confirmations match threshold\n            // Check the status from result since we are confident in the result\n            if (receipt.status) {\n              transaction.status = \"success\";\n            } else if (!receipt.status) {\n              transaction.status = \"error\";\n            }\n          } else if (transaction.confirmationCount > confidenceThreshold) {\n            // Confidence threshold met\n          }\n          // Update transaction with receipt details\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"receipt\", receipt => {\n          // Received receipt, met total number of confirmations\n          transaction.recentEvent = \"receipt\";\n          this.updateTransaction(transaction);\n        })\n        .on(\"error\", error => {\n          // Errored out\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n          // TODO: should this be a custom error? What is the error here?\n          // TODO: determine how to handle error messages globally\n          window.toastProvider.addMessage(\"Value change failed\", {\n            secondaryMessage: \"Could not change value.\",\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\"\n          });\n        });\n    } catch (error) {\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Value change failed\", {\n        secondaryMessage: \"Could not change value on smart contract\",\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\"\n      });\n    }\n  };\n\n  // Create tx\n  createTransaction = () => {\n    let transaction = {};\n    transaction.created = Date.now();\n    transaction.lastUpdated = Date.now();\n    transaction.status = \"initialized\";\n    transaction.confirmationCount = 0;\n\n    return transaction;\n  };\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n  };\n\n  state = {\n    contract: {},\n    account: null,\n    web3: null,\n    transactions: {},\n    initWeb3: this.initWeb3,\n    initContract: this.initContract,\n    initAccount: this.initAccount,\n    contractMethodSendWrapper: this.contractMethodSendWrapper\n  };\n\n  componentDidMount() {\n    this.initWeb3();\n  }\n\n  render() {\n    return (\n      <RimbleTransactionContext.Provider value={this.state} {...this.props} />\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport { Box, Flex, Link, Button, Heading } from \"rimble-ui\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <Box bg=\"primary\" p={3} justifyContent=\"center\" flexDirection=\"column\">\n        <Flex justifyContent=\"flex-end\">\n          <Link\n            href=\"https://github.com/ConsenSys/rimble-app-demo\"\n            target=\"_blank\"\n          >\n            <Button>GitHub</Button>\n          </Link>\n        </Flex>\n\n        <Box width=\"400px\" mx=\"auto\">\n          <Heading.h2 color={\"white\"}>Rimble App Demo</Heading.h2>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","const TransactionToastMessages = {\n  started: {\n    message: \"Change submitted\",\n    secondaryMessage: \"Confirm in MetaMask\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"default\",\n    icon: \"InfoOutline\"\n  },\n  pending: {\n    message: \"Processing change...\",\n    secondaryMessage: \"This may take a few minutes\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"processing\"\n  },\n  confirmed: {\n    message: \"First block confirmed\",\n    secondaryMessage: \"Your change is in progress\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"processing\"\n  },\n  success: {\n    message: \"Smart contract value changed\",\n    variant: \"success\"\n  },\n  error: {\n    message: \"Value change failed\",\n    secondaryMessage: \"Make sure you have enough Ether (ETH) and try again\",\n    actionHref: \"\",\n    actionText: \"\",\n    variant: \"failure\"\n  }\n};\n\nexport default TransactionToastMessages;\n","import React from \"react\";\nimport TransactionToastMessages from \"./content/TransactionToastMessages\";\nimport { ToastMessage } from \"rimble-ui\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      prevTx = this.getTransactionFromCollection(\n        currentTx.created,\n        prevCollection\n      );\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx !== null && typeof tx !== \"undefined\") {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        break;\n    }\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import React from \"react\";\nimport { Flex, Heading, MetaMaskButton } from \"rimble-ui\";\n\nclass ConnectButton extends React.Component {\n  render() {\n    return (\n      <Flex flexDirection=\"column\" alignItems=\"center\" px={3} py={5}>\n        <Heading.h3 textAlign=\"center\" pb={4}>\n          Connect with MetaMask to try out the demo\n        </Heading.h3>\n\n        <MetaMaskButton\n          size={\"medium\"}\n          mx=\"auto\"\n          onClick={this.props.initAccount}\n          disabled={this.props.account}\n        >\n          Connect with MetaMask\n        </MetaMaskButton>\n      </Flex>\n    );\n  }\n}\n\nexport default ConnectButton;\n","import React from \"react\";\nimport { Flex, Box, Text, Button, OutlineButton } from \"rimble-ui\";\n\n// Address of the deployed smart contract (from etherscan)\nconst contractAddress = \"0x0f69f0ac4b92bf0d101b5747eed3fa6b653a36f8\";\n\n// Copied from remix ide\nconst contractAbi = [\n  {\n    constant: false,\n    inputs: [],\n    name: \"decrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"incrementCounter\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    constant: false,\n    inputs: [],\n    name: \"reset\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\"\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"getCounter\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"int256\"\n      }\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\"\n  }\n];\n\nclass SmartContractControls extends React.Component {\n  state = {\n    value: 0,\n    needsUpdate: false\n  };\n\n  // gets the number stored in smart contract storage\n  getNumber = ({ ...props }) => {\n    const { contract } = this.props;\n    try {\n      contract.methods\n        .getCounter()\n        .call()\n        .then(value => {\n          value = Number(value.toString());\n          this.setState({ value, needsUpdate: false });\n        })\n        .catch(error => {\n          console.log(error);\n          this.setState({ error });\n        });\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    Object.keys(this.props.transactions).map(key => {\n      let tx = this.props.transactions[key];\n      if (tx.status === \"success\" && this.state.needsUpdate) {\n        console.log(\"Getting updated number.\");\n        this.getNumber();\n        return false;\n      } else {\n        return false;\n      }\n    });\n  };\n\n  resetCounter = () => {\n    this.props.contractMethodSendWrapper(\"reset\");\n  };\n\n  incrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"incrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  decrementCounter = () => {\n    this.props.contractMethodSendWrapper(\"decrementCounter\");\n    this.setState({\n      needsUpdate: true\n    });\n  };\n\n  componentDidMount() {\n    // Init the contract after the web3 provider has been determined\n    this.props.initContract(contractAddress, contractAbi).then(() => {\n      // Can finally interact with contract\n      this.getNumber();\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <Box>\n        <Flex\n          px={0}\n          pb={4}\n          borderBottom={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n          alignItems=\"end\"\n        >\n          <Text mb={2} fontSize={3}>\n            Smart contract value\n          </Text>\n\n          <OutlineButton\n            size={\"small\"}\n            onClick={this.resetCounter}\n            disabled={!this.props.account}\n          >\n            Reset\n          </OutlineButton>\n        </Flex>\n\n        <Box py={4}>\n          <Text fontSize={6} textAlign={\"center\"}>\n            {this.state.value}\n          </Text>\n        </Box>\n\n        <Flex\n          px={0}\n          pt={4}\n          borderTop={1}\n          borderColor={\"#E8E8E8\"}\n          justifyContent=\"space-between\"\n        >\n          <Button size={\"medium\"} mr={4} onClick={this.incrementCounter}>\n            Increase value\n          </Button>\n\n          <Button size={\"medium\"} onClick={this.decrementCounter}>\n            Decrease value\n          </Button>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default SmartContractControls;\n","import React from \"react\";\nimport { Card, Heading, Box, Flex, Text } from \"rimble-ui\";\n\nclass TransactionsCard extends React.Component {\n  render() {\n    return (\n      <Card width={\"400px\"} mx={\"auto\"} px={4}>\n        <Heading.h2 fontSize={3} textAlign={\"center\"} px={4} mb={5}>\n          Transactions\n        </Heading.h2>\n        <Box>\n          {Object.keys(this.props.transactions).length > 0 ? (\n            <Flex>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                txHash\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Status\n              </Text>\n              <Text width={\"33%\"} textAlign={\"center\"} fontWeight=\"bold\">\n                Confirmations\n              </Text>\n            </Flex>\n          ) : null}\n\n          {Object.keys(this.props.transactions).length < 1 ? (\n            <Text textAlign={\"center\"}>No recent transactions</Text>\n          ) : (\n            Object.keys(this.props.transactions).map((keyName, keyIndex) => {\n              let txHash = \"\";\n              if (this.props.transactions[keyName].transactionHash) {\n                txHash = this.props.transactions[\n                  keyName\n                ].transactionHash.toString();\n                const txStart = txHash.substr(0, 7);\n                const txEnd = txHash.substr(txHash.length - 4);\n                txHash = txStart + \"...\" + txEnd;\n              }\n\n              return (\n                <Flex>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {txHash}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].status}\n                  </Text>\n                  <Text width={\"33%\"} textAlign={\"center\"}>\n                    {this.props.transactions[keyName].confirmationCount}\n                  </Text>\n                </Flex>\n              );\n            })\n          )}\n        </Box>\n      </Card>\n    );\n  }\n}\n\nexport default TransactionsCard;\n","import React from \"react\";\nimport { Card } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\n\nimport ConnectButton from \"./ConnectButton\";\nimport SmartContractControls from \"./SmartContractControls\";\nimport TransactionsCard from \"./TransactionsCard\";\n\nclass PrimaryCard extends React.Component {\n  render() {\n    return (\n      <RimbleWeb3.Consumer>\n        {({\n          contract,\n          account,\n          transactions,\n          initContract,\n          initAccount,\n          contractMethodSendWrapper\n        }) => (\n          <div>\n            <Card width={\"400px\"} mx={\"auto\"} px={4}>\n              {!account ? (\n                <ConnectButton initAccount={initAccount} account={account} />\n              ) : (\n                <SmartContractControls\n                  contract={contract}\n                  account={account}\n                  transactions={transactions}\n                  initContract={initContract}\n                  contractMethodSendWrapper={contractMethodSendWrapper}\n                />\n              )}\n            </Card>\n\n            <TransactionsCard transactions={transactions} />\n            <TransactionToastUtil transactions={transactions} />\n          </div>\n        )}\n      </RimbleWeb3.Consumer>\n    );\n  }\n}\n\nexport default PrimaryCard;\n","import React from \"react\";\nimport { Box, Heading, Text } from \"rimble-ui\";\n\nclass InstructionsCard extends React.Component {\n  render() {\n    return (\n      <Box width={\"400px\"} mx=\"auto\" mt={4}>\n        <Heading.h3>Instructions:</Heading.h3>\n        <ol>\n          <li>\n            <Text p={1}>Make sure MetaMask is working in your browser</Text>\n          </li>\n          <li>\n            <Text p={1}>Set the network to Rinkeby Test Network</Text>\n          </li>\n          <li>\n            <Text p={1}>You'll need a little bit of ETH for gas fees</Text>\n          </li>\n        </ol>\n      </Box>\n    );\n  }\n}\n\nexport default InstructionsCard;\n","import React from \"react\";\nimport { Card, Heading, Text, Link } from \"rimble-ui\"\n\nclass MissingWeb3Provider extends React.Component {\n    render() {\n        return(\n            <Card width={\"600px\"} mx={\"auto\"} px={4}>\n                <Heading.h2>No Web3 Provider Available</Heading.h2>\n\n                <Text>You will need to <Link href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\" target=\"_blank\">install MetaMask</Link> to use this dApp.</Text>\n            </Card>\n        )\n    }\n}\n\nexport default MissingWeb3Provider\n","// theme.js\nexport default {\n  fontSizes: [\n    12, 14, 16, 20, 24, 32, 48, 64\n  ],\n  fontWeights: [\n    0, 300, 400, 600, 700\n  ],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: 'athelas, georgia, times, serif',\n    sansSerif: '\"Source Sans Pro\", -apple-system, sans-serif',\n  },\n  space: [\n    0, 4, 8, 16, 32, 64, 128, 256\n  ],\n  radii: [\n    '0', '4px', '8px', '16px'\n  ],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [\n    0,\n    '1px solid'\n  ],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)'\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: '#4E3FCE',\n    blue: '#007ce0',\n    navy: '#004175',\n    copyColor: '#3F3D4B',\n    // black: '#000',\n    black: '#000e1a',\n      'near-black': '#111',\n      'dark-gray': '#333',\n      'mid-gray': '#555',\n    // gray: ' #777',\n    grey: '#CCC',\n    silver: '#999',\n      'light-silver': '#aaa',\n      'moon-gray': '#ccc',\n      'light-gray': '#eee',\n      'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ]\n  }\n}\n","import React, { Component } from \"react\";\nimport { ThemeProvider, Box, Text, Flex } from \"rimble-ui\";\n\nimport RimbleWeb3 from \"./utilities/RimbleWeb3\";\n\nimport Header from \"./components/Header\";\nimport PrimaryCard from \"./components/PrimaryCard\";\nimport InstructionsCard from \"./components/InstructionsCard\";\nimport MissingWeb3Provider from \"./components/MissingWeb3Provider\";\n\nimport theme from \"./theme\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body, html {\n    margin: 0;\n    padding: 0;\n    background-color: #efefef;\n  }\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <ThemeProvider theme={theme} className=\"App\">\n        <Header />\n        <Flex justifyContent=\"center\" p={4}>\n          <Text width=\"400px\">\n            This is a starter React dApp that uses the Rimble UI component\n            library to call methods on a smart contract deployed to the Ethereum\n            Rinkeby testnet.\n          </Text>\n        </Flex>\n\n        <RimbleWeb3>\n          <RimbleWeb3.Consumer>\n            {({ web3 }) => (\n              <Box>\n                {/* Conditionally render child comonents dependent on web3 being loaded */}\n                {!web3 ? <MissingWeb3Provider /> : <PrimaryCard />}\n              </Box>\n            )}\n          </RimbleWeb3.Consumer>\n        </RimbleWeb3>\n        <InstructionsCard />\n        <GlobalStyle />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}